   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               		.section	.text.USART_Transmit,"ax",@progbits
  11               	USART_Transmit:
  12               	/* prologue: function */
  13               	/* frame size = 0 */
  14               	/* stack size = 0 */
  15               	.L__stack_usage = 0
  16               	.L2:
  17 0000 9091 C000 		lds r25,192
  18 0004 95FF      		sbrs r25,5
  19 0006 00C0      		rjmp .L2
  20 0008 8093 C600 		sts 198,r24
  21               	/* epilogue start */
  22 000c 0895      		ret
  24               		.section	.text.USART_Receive,"ax",@progbits
  26               	USART_Receive:
  27               	/* prologue: function */
  28               	/* frame size = 0 */
  29               	/* stack size = 0 */
  30               	.L__stack_usage = 0
  31               	.L6:
  32 0000 8091 C000 		lds r24,192
  33 0004 85FF      		sbrs r24,5
  34 0006 00C0      		rjmp .L6
  35 0008 8091 C600 		lds r24,198
  36               	/* epilogue start */
  37 000c 0895      		ret
  39               		.section	.text.armedState,"ax",@progbits
  40               	.global	armedState
  42               	armedState:
  43               	/* prologue: function */
  44               	/* frame size = 0 */
  45               	/* stack size = 0 */
  46               	.L__stack_usage = 0
  47 0000 80E0      		ldi r24,0
  48               	/* epilogue start */
  49 0002 0895      		ret
  51               		.section	.rodata.timerState.str1.1,"aMS",@progbits,1
  52               	.LC0:
  53 0000 4B65 793A 		.string	"Key: %c\n"
  53      2025 630A 
  53      00
  54               		.section	.text.timerState,"ax",@progbits
  55               	.global	timerState
  57               	timerState:
  58               	/* prologue: function */
  59               	/* frame size = 0 */
  60               	/* stack size = 0 */
  61               	.L__stack_usage = 0
  62 0000 0E94 0000 		call KEYPAD_GetKey
  63 0004 8111      		cpse r24,__zero_reg__
  64 0006 00C0      		rjmp .L11
  65               	.L13:
  66 0008 81E0      		ldi r24,lo8(1)
  67 000a 0895      		ret
  68               	.L11:
  69 000c 2091 0000 		lds r18,inputIndex
  70 0010 3091 0000 		lds r19,inputIndex+1
  71 0014 F901      		movw r30,r18
  72 0016 E050      		subi r30,lo8(-(input))
  73 0018 F040      		sbci r31,hi8(-(input))
  74 001a 8083      		st Z,r24
  75 001c 2F5F      		subi r18,-1
  76 001e 3F4F      		sbci r19,-1
  77 0020 3093 0000 		sts inputIndex+1,r19
  78 0024 2093 0000 		sts inputIndex,r18
  79 0028 2FEF      		ldi r18,lo8(959999)
  80 002a 35EA      		ldi r19,hi8(959999)
  81 002c 9EE0      		ldi r25,hlo8(959999)
  82 002e 2150      	1:	subi r18,1
  83 0030 3040      		sbci r19,0
  84 0032 9040      		sbci r25,0
  85 0034 01F4      		brne 1b
  86 0036 00C0      		rjmp .
  87 0038 0000      		nop
  88 003a 1F92      		push __zero_reg__
  89 003c 8F93      		push r24
  90 003e 80E0      		ldi r24,lo8(.LC0)
  91 0040 90E0      		ldi r25,hi8(.LC0)
  92 0042 9F93      		push r25
  93 0044 8F93      		push r24
  94 0046 0E94 0000 		call printf
  95 004a 0F90      		pop __tmp_reg__
  96 004c 0F90      		pop __tmp_reg__
  97 004e 0F90      		pop __tmp_reg__
  98 0050 0F90      		pop __tmp_reg__
  99 0052 8091 0000 		lds r24,inputIndex
 100 0056 9091 0000 		lds r25,inputIndex+1
 101 005a 0497      		sbiw r24,4
 102 005c 01F4      		brne .L13
 103 005e E0E0      		ldi r30,lo8(input)
 104 0060 F0E0      		ldi r31,hi8(input)
 105 0062 A0E0      		ldi r26,lo8(password)
 106 0064 B0E0      		ldi r27,hi8(password)
 107 0066 81E0      		ldi r24,lo8(1)
 108               	.L15:
 109 0068 2191      		ld r18,Z+
 110 006a 9D91      		ld r25,X+
 111 006c 2913      		cpse r18,r25
 112 006e 80E0      		ldi r24,0
 113               	.L14:
 114 0070 20E0      		ldi r18,hi8(input+4)
 115 0072 E030      		cpi r30,lo8(input+4)
 116 0074 F207      		cpc r31,r18
 117 0076 01F4      		brne .L15
 118 0078 8111      		cpse r24,__zero_reg__
 119 007a 00C0      		rjmp .L16
 120 007c 83E0      		ldi r24,lo8(3)
 121 007e 0895      		ret
 122               	.L16:
 123 0080 82E0      		ldi r24,lo8(2)
 124               	/* epilogue start */
 125 0082 0895      		ret
 127               		.section	.text.alarmState,"ax",@progbits
 128               	.global	alarmState
 130               	alarmState:
 131               	/* prologue: function */
 132               	/* frame size = 0 */
 133               	/* stack size = 0 */
 134               	.L__stack_usage = 0
 135 0000 85B1      		in r24,0x5
 136 0002 90E1      		ldi r25,lo8(16)
 137 0004 8927      		eor r24,r25
 138 0006 85B9      		out 0x5,r24
 139 0008 83E0      		ldi r24,lo8(3)
 140               	/* epilogue start */
 141 000a 0895      		ret
 143               		.section	.rodata.main.str1.1,"aMS",@progbits,1
 144               	.LC1:
 145 0000 4152 4D45 		.string	"ARMED"
 145      4400 
 146               	.LC2:
 147 0006 554E 4C4F 		.string	"UNLOCKED"
 147      434B 4544 
 147      00
 148               	.LC3:
 149 000f 414C 4152 		.string	"ALARM"
 149      4D00 
 150               		.section	.text.startup.main,"ax",@progbits
 151               	.global	main
 153               	main:
 154               	/* prologue: function */
 155               	/* frame size = 0 */
 156               	/* stack size = 0 */
 157               	.L__stack_usage = 0
 158 0000 1092 C500 		sts 197,__zero_reg__
 159 0004 80E1      		ldi r24,lo8(16)
 160 0006 8093 C400 		sts 196,r24
 161 000a 8091 C100 		lds r24,193
 162 000e 8861      		ori r24,lo8(24)
 163 0010 8093 C100 		sts 193,r24
 164 0014 8091 C200 		lds r24,194
 165 0018 8E60      		ori r24,lo8(14)
 166 001a 8093 C200 		sts 194,r24
 167 001e 80E0      		ldi r24,lo8(uart_output)
 168 0020 90E0      		ldi r25,hi8(uart_output)
 169 0022 9093 0000 		sts __iob+2+1,r25
 170 0026 8093 0000 		sts __iob+2,r24
 171 002a 80E0      		ldi r24,lo8(uart_input)
 172 002c 90E0      		ldi r25,hi8(uart_input)
 173 002e 9093 0000 		sts __iob+1,r25
 174 0032 8093 0000 		sts __iob,r24
 175 0036 0E94 0000 		call KEYPAD_Init
 176 003a 249A      		sbi 0x4,4
 177 003c 8091 0101 		lds r24,257
 178 0040 8064      		ori r24,lo8(64)
 179 0042 8093 0101 		sts 257,r24
 180 0046 81E0      		ldi r24,lo8(1)
 181               	.L21:
 182 0048 8130      		cpi r24,lo8(1)
 183 004a 01F0      		breq .L22
 184 004c 00F0      		brlo .L23
 185 004e 8230      		cpi r24,lo8(2)
 186 0050 01F4      		brne .L29
 187 0052 C0E0      		ldi r28,lo8(input)
 188 0054 D0E0      		ldi r29,hi8(input)
 189 0056 14E0      		ldi r17,lo8(4)
 190               	.L24:
 191 0058 FE01      		movw r30,r28
 192 005a 812F      		mov r24,r17
 193               		0:
 194 005c 1192      		st Z+,__zero_reg__
 195 005e 8A95      		dec r24
 196 0060 01F4      		brne 0b
 197 0062 1092 0000 		sts inputIndex+1,__zero_reg__
 198 0066 1092 0000 		sts inputIndex,__zero_reg__
 199 006a 80E0      		ldi r24,lo8(.LC2)
 200 006c 90E0      		ldi r25,hi8(.LC2)
 201 006e 0E94 0000 		call puts
 202 0072 8091 0201 		lds r24,258
 203 0076 8064      		ori r24,lo8(64)
 204 0078 8093 0201 		sts 258,r24
 205 007c 00C0      		rjmp .L24
 206               	.L29:
 207 007e 8330      		cpi r24,lo8(3)
 208 0080 01F4      		brne .L21
 209 0082 80E0      		ldi r24,lo8(.LC3)
 210 0084 90E0      		ldi r25,hi8(.LC3)
 211 0086 0E94 0000 		call puts
 212 008a 0E94 0000 		call alarmState
 213 008e 00C0      		rjmp .L21
 214               	.L23:
 215 0090 80E0      		ldi r24,lo8(.LC1)
 216 0092 90E0      		ldi r25,hi8(.LC1)
 217 0094 0E94 0000 		call puts
 218 0098 00C0      		rjmp .L23
 219               	.L22:
 220 009a 0E94 0000 		call timerState
 221 009e 00C0      		rjmp .L21
 223               	.global	uart_input
 224               		.section	.data.uart_input,"aw",@progbits
 227               	uart_input:
 228 0000 0000 00   		.zero	3
 229 0003 01        		.byte	1
 230 0004 0000 0000 		.zero	4
 231 0008 0000      		.word	0
 232 000a 0000      		.word	gs(USART_Receive)
 233 000c 0000      		.word	0
 234               	.global	uart_output
 235               		.section	.data.uart_output,"aw",@progbits
 238               	uart_output:
 239 0000 0000 00   		.zero	3
 240 0003 02        		.byte	2
 241 0004 0000 0000 		.zero	4
 242 0008 0000      		.word	gs(USART_Transmit)
 243 000a 0000      		.word	0
 244 000c 0000      		.word	0
 245               	.global	inputIndex
 246               		.section	.bss.inputIndex,"aw",@nobits
 249               	inputIndex:
 250 0000 0000      		.zero	2
 251               		.comm	input,4,1
 252               	.global	password
 253               		.section	.data.password,"aw",@progbits
 256               	password:
 257 0000 31        		.byte	49
 258 0001 32        		.byte	50
 259 0002 33        		.byte	51
 260 0003 34        		.byte	52
 261               	.global	keypad
 262               		.section	.data.keypad,"aw",@progbits
 265               	keypad:
 266 0000 31        		.byte	49
 267 0001 32        		.byte	50
 268 0002 33        		.byte	51
 269 0003 41        		.byte	65
 270 0004 34        		.byte	52
 271 0005 35        		.byte	53
 272 0006 36        		.byte	54
 273 0007 42        		.byte	66
 274 0008 37        		.byte	55
 275 0009 38        		.byte	56
 276 000a 39        		.byte	57
 277 000b 43        		.byte	67
 278 000c 2A        		.byte	42
 279 000d 30        		.byte	48
 280 000e 23        		.byte	35
 281 000f 44        		.byte	68
 282               		.ident	"GCC: (AVR_8_bit_GNU_Toolchain_3.7.0_1796) 7.3.0"
 283               	.global __do_copy_data
 284               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cciHXDn1.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cciHXDn1.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cciHXDn1.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cciHXDn1.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/cciHXDn1.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cciHXDn1.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/cciHXDn1.s:11     .text.USART_Transmit:0000000000000000 USART_Transmit
     /tmp/cciHXDn1.s:26     .text.USART_Receive:0000000000000000 USART_Receive
     /tmp/cciHXDn1.s:42     .text.armedState:0000000000000000 armedState
     /tmp/cciHXDn1.s:57     .text.timerState:0000000000000000 timerState
     /tmp/cciHXDn1.s:249    .bss.inputIndex:0000000000000000 inputIndex
                            *COM*:0000000000000004 input
     /tmp/cciHXDn1.s:256    .data.password:0000000000000000 password
     /tmp/cciHXDn1.s:130    .text.alarmState:0000000000000000 alarmState
     /tmp/cciHXDn1.s:153    .text.startup.main:0000000000000000 main
     /tmp/cciHXDn1.s:238    .data.uart_output:0000000000000000 uart_output
     /tmp/cciHXDn1.s:227    .data.uart_input:0000000000000000 uart_input
     /tmp/cciHXDn1.s:265    .data.keypad:0000000000000000 keypad

UNDEFINED SYMBOLS
KEYPAD_GetKey
printf
__iob
KEYPAD_Init
puts
__do_copy_data
__do_clear_bss
