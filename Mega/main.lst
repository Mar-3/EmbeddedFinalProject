   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               		.section	.text.USART_Transmit,"ax",@progbits
  11               	USART_Transmit:
  12               	/* prologue: function */
  13               	/* frame size = 0 */
  14               	/* stack size = 0 */
  15               	.L__stack_usage = 0
  16               	.L2:
  17 0000 9091 C000 		lds r25,192
  18 0004 95FF      		sbrs r25,5
  19 0006 00C0      		rjmp .L2
  20 0008 8093 C600 		sts 198,r24
  21               	/* epilogue start */
  22 000c 0895      		ret
  24               		.section	.text.USART_Receive,"ax",@progbits
  26               	USART_Receive:
  27               	/* prologue: function */
  28               	/* frame size = 0 */
  29               	/* stack size = 0 */
  30               	.L__stack_usage = 0
  31               	.L6:
  32 0000 8091 C000 		lds r24,192
  33 0004 85FF      		sbrs r24,5
  34 0006 00C0      		rjmp .L6
  35 0008 8091 C600 		lds r24,198
  36               	/* epilogue start */
  37 000c 0895      		ret
  39               		.section	.text.armedState,"ax",@progbits
  40               	.global	armedState
  42               	armedState:
  43               	/* prologue: function */
  44               	/* frame size = 0 */
  45               	/* stack size = 0 */
  46               	.L__stack_usage = 0
  47 0000 81E0      		ldi r24,lo8(1)
  48               	/* epilogue start */
  49 0002 0895      		ret
  51               		.section	.rodata.timerState.str1.1,"aMS",@progbits,1
  52               	.LC0:
  53 0000 4B65 793A 		.string	"Key: %c\n"
  53      2025 630A 
  53      00
  54               		.section	.text.timerState,"ax",@progbits
  55               	.global	timerState
  57               	timerState:
  58               	/* prologue: function */
  59               	/* frame size = 0 */
  60               	/* stack size = 0 */
  61               	.L__stack_usage = 0
  62 0000 0E94 0000 		call KEYPAD_GetKey
  63 0004 8111      		cpse r24,__zero_reg__
  64 0006 00C0      		rjmp .L11
  65               	.L13:
  66 0008 81E0      		ldi r24,lo8(1)
  67 000a 0895      		ret
  68               	.L11:
  69 000c 2091 0000 		lds r18,inputIndex
  70 0010 3091 0000 		lds r19,inputIndex+1
  71 0014 F901      		movw r30,r18
  72 0016 E050      		subi r30,lo8(-(input))
  73 0018 F040      		sbci r31,hi8(-(input))
  74 001a 8083      		st Z,r24
  75 001c 2F5F      		subi r18,-1
  76 001e 3F4F      		sbci r19,-1
  77 0020 3093 0000 		sts inputIndex+1,r19
  78 0024 2093 0000 		sts inputIndex,r18
  79 0028 2FEF      		ldi r18,lo8(959999)
  80 002a 35EA      		ldi r19,hi8(959999)
  81 002c 9EE0      		ldi r25,hlo8(959999)
  82 002e 2150      	1:	subi r18,1
  83 0030 3040      		sbci r19,0
  84 0032 9040      		sbci r25,0
  85 0034 01F4      		brne 1b
  86 0036 00C0      		rjmp .
  87 0038 0000      		nop
  88 003a 1F92      		push __zero_reg__
  89 003c 8F93      		push r24
  90 003e 80E0      		ldi r24,lo8(.LC0)
  91 0040 90E0      		ldi r25,hi8(.LC0)
  92 0042 9F93      		push r25
  93 0044 8F93      		push r24
  94 0046 0E94 0000 		call printf
  95 004a 0F90      		pop __tmp_reg__
  96 004c 0F90      		pop __tmp_reg__
  97 004e 0F90      		pop __tmp_reg__
  98 0050 0F90      		pop __tmp_reg__
  99 0052 8091 0000 		lds r24,inputIndex
 100 0056 9091 0000 		lds r25,inputIndex+1
 101 005a 0497      		sbiw r24,4
 102 005c 01F4      		brne .L13
 103 005e E0E0      		ldi r30,lo8(input)
 104 0060 F0E0      		ldi r31,hi8(input)
 105 0062 A0E0      		ldi r26,lo8(password)
 106 0064 B0E0      		ldi r27,hi8(password)
 107 0066 81E0      		ldi r24,lo8(1)
 108               	.L15:
 109 0068 2191      		ld r18,Z+
 110 006a 9D91      		ld r25,X+
 111 006c 2913      		cpse r18,r25
 112 006e 80E0      		ldi r24,0
 113               	.L14:
 114 0070 20E0      		ldi r18,hi8(input+4)
 115 0072 E030      		cpi r30,lo8(input+4)
 116 0074 F207      		cpc r31,r18
 117 0076 01F4      		brne .L15
 118 0078 8111      		cpse r24,__zero_reg__
 119 007a 00C0      		rjmp .L16
 120 007c 83E0      		ldi r24,lo8(3)
 121 007e 0895      		ret
 122               	.L16:
 123 0080 82E0      		ldi r24,lo8(2)
 124               	/* epilogue start */
 125 0082 0895      		ret
 127               		.section	.rodata.main.str1.1,"aMS",@progbits,1
 128               	.LC1:
 129 0000 5374 6172 		.string	"Starting..."
 129      7469 6E67 
 129      2E2E 2E00 
 130               	.LC2:
 131 000c 4152 4D45 		.string	"ARMED"
 131      4400 
 132               	.LC3:
 133 0012 554E 4C4F 		.string	"UNLOCKED"
 133      434B 4544 
 133      00
 134               	.LC4:
 135 001b 414C 4152 		.string	"ALARM"
 135      4D00 
 136               		.section	.text.startup.main,"ax",@progbits
 137               	.global	main
 139               	main:
 140               	/* prologue: function */
 141               	/* frame size = 0 */
 142               	/* stack size = 0 */
 143               	.L__stack_usage = 0
 144 0000 1092 C500 		sts 197,__zero_reg__
 145 0004 80E1      		ldi r24,lo8(16)
 146 0006 8093 C400 		sts 196,r24
 147 000a 8091 C100 		lds r24,193
 148 000e 8861      		ori r24,lo8(24)
 149 0010 8093 C100 		sts 193,r24
 150 0014 8091 C200 		lds r24,194
 151 0018 8E60      		ori r24,lo8(14)
 152 001a 8093 C200 		sts 194,r24
 153 001e 80E0      		ldi r24,lo8(uart_output)
 154 0020 90E0      		ldi r25,hi8(uart_output)
 155 0022 9093 0000 		sts __iob+2+1,r25
 156 0026 8093 0000 		sts __iob+2,r24
 157 002a 80E0      		ldi r24,lo8(uart_input)
 158 002c 90E0      		ldi r25,hi8(uart_input)
 159 002e 9093 0000 		sts __iob+1,r25
 160 0032 8093 0000 		sts __iob,r24
 161 0036 0E94 0000 		call KEYPAD_Init
 162 003a 80E0      		ldi r24,lo8(.LC1)
 163 003c 90E0      		ldi r25,hi8(.LC1)
 164 003e 0E94 0000 		call puts
 165 0042 81E0      		ldi r24,lo8(1)
 166               	.L20:
 167 0044 8130      		cpi r24,lo8(1)
 168 0046 01F0      		breq .L21
 169 0048 00F0      		brlo .L22
 170 004a 8230      		cpi r24,lo8(2)
 171 004c 01F0      		breq .L23
 172 004e 8330      		cpi r24,lo8(3)
 173 0050 01F4      		brne .L20
 174               	.L24:
 175 0052 80E0      		ldi r24,lo8(.LC4)
 176 0054 90E0      		ldi r25,hi8(.LC4)
 177 0056 0E94 0000 		call puts
 178 005a 00C0      		rjmp .L24
 179               	.L22:
 180 005c 80E0      		ldi r24,lo8(.LC2)
 181 005e 90E0      		ldi r25,hi8(.LC2)
 182 0060 0E94 0000 		call puts
 183               	.L21:
 184 0064 0E94 0000 		call timerState
 185 0068 00C0      		rjmp .L20
 186               	.L23:
 187 006a 80E0      		ldi r24,lo8(.LC3)
 188 006c 90E0      		ldi r25,hi8(.LC3)
 189 006e 0E94 0000 		call puts
 190 0072 00C0      		rjmp .L23
 192               	.global	uart_input
 193               		.section	.data.uart_input,"aw",@progbits
 196               	uart_input:
 197 0000 0000 00   		.zero	3
 198 0003 01        		.byte	1
 199 0004 0000 0000 		.zero	4
 200 0008 0000      		.word	0
 201 000a 0000      		.word	gs(USART_Receive)
 202 000c 0000      		.word	0
 203               	.global	uart_output
 204               		.section	.data.uart_output,"aw",@progbits
 207               	uart_output:
 208 0000 0000 00   		.zero	3
 209 0003 02        		.byte	2
 210 0004 0000 0000 		.zero	4
 211 0008 0000      		.word	gs(USART_Transmit)
 212 000a 0000      		.word	0
 213 000c 0000      		.word	0
 214               	.global	inputIndex
 215               		.section	.bss.inputIndex,"aw",@nobits
 218               	inputIndex:
 219 0000 0000      		.zero	2
 220               		.comm	input,4,1
 221               	.global	password
 222               		.section	.data.password,"aw",@progbits
 225               	password:
 226 0000 31        		.byte	49
 227 0001 32        		.byte	50
 228 0002 33        		.byte	51
 229 0003 34        		.byte	52
 230               	.global	keypad
 231               		.section	.data.keypad,"aw",@progbits
 234               	keypad:
 235 0000 31        		.byte	49
 236 0001 32        		.byte	50
 237 0002 33        		.byte	51
 238 0003 41        		.byte	65
 239 0004 34        		.byte	52
 240 0005 35        		.byte	53
 241 0006 36        		.byte	54
 242 0007 42        		.byte	66
 243 0008 37        		.byte	55
 244 0009 38        		.byte	56
 245 000a 39        		.byte	57
 246 000b 43        		.byte	67
 247 000c 2A        		.byte	42
 248 000d 30        		.byte	48
 249 000e 23        		.byte	35
 250 000f 44        		.byte	68
 251               		.ident	"GCC: (AVR_8_bit_GNU_Toolchain_3.7.0_1796) 7.3.0"
 252               	.global __do_copy_data
 253               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cciMV6Jg.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cciMV6Jg.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cciMV6Jg.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cciMV6Jg.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/cciMV6Jg.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cciMV6Jg.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/cciMV6Jg.s:11     .text.USART_Transmit:0000000000000000 USART_Transmit
     /tmp/cciMV6Jg.s:26     .text.USART_Receive:0000000000000000 USART_Receive
     /tmp/cciMV6Jg.s:42     .text.armedState:0000000000000000 armedState
     /tmp/cciMV6Jg.s:57     .text.timerState:0000000000000000 timerState
     /tmp/cciMV6Jg.s:218    .bss.inputIndex:0000000000000000 inputIndex
                            *COM*:0000000000000004 input
     /tmp/cciMV6Jg.s:225    .data.password:0000000000000000 password
     /tmp/cciMV6Jg.s:139    .text.startup.main:0000000000000000 main
     /tmp/cciMV6Jg.s:207    .data.uart_output:0000000000000000 uart_output
     /tmp/cciMV6Jg.s:196    .data.uart_input:0000000000000000 uart_input
     /tmp/cciMV6Jg.s:234    .data.keypad:0000000000000000 keypad

UNDEFINED SYMBOLS
KEYPAD_GetKey
printf
__iob
KEYPAD_Init
puts
__do_copy_data
__do_clear_bss
