   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               		.section	.text.USART_Transmit,"ax",@progbits
  10               	USART_Transmit:
  11               	/* prologue: function */
  12               	/* frame size = 0 */
  13               	/* stack size = 0 */
  14               	.L__stack_usage = 0
  15               	.L2:
  16 0000 9091 C000 		lds r25,192
  17 0004 95FF      		sbrs r25,5
  18 0006 00C0      		rjmp .L2
  19 0008 8093 C600 		sts 198,r24
  20               	/* epilogue start */
  21 000c 0895      		ret
  23               		.section	.text.USART_Receive,"ax",@progbits
  25               	USART_Receive:
  26               	/* prologue: function */
  27               	/* frame size = 0 */
  28               	/* stack size = 0 */
  29               	.L__stack_usage = 0
  30               	.L6:
  31 0000 8091 C000 		lds r24,192
  32 0004 85FF      		sbrs r24,5
  33 0006 00C0      		rjmp .L6
  34 0008 8091 C600 		lds r24,198
  35               	/* epilogue start */
  36 000c 0895      		ret
  38               		.section	.rodata.main.str1.1,"aMS",@progbits,1
  39               	.LC0:
  40 0000 4D6F 7665 		.string	"Movement detected, switching to timer"
  40      6D65 6E74 
  40      2064 6574 
  40      6563 7465 
  40      642C 2073 
  41               		.section	.text.startup.main,"ax",@progbits
  42               	.global	main
  44               	main:
  45               	/* prologue: function */
  46               	/* frame size = 0 */
  47               	/* stack size = 0 */
  48               	.L__stack_usage = 0
  49 0000 1092 C500 		sts 197,__zero_reg__
  50 0004 80E1      		ldi r24,lo8(16)
  51 0006 8093 C400 		sts 196,r24
  52 000a 8091 C100 		lds r24,193
  53 000e 8861      		ori r24,lo8(24)
  54 0010 8093 C100 		sts 193,r24
  55 0014 8091 C200 		lds r24,194
  56 0018 8E60      		ori r24,lo8(14)
  57 001a 8093 C200 		sts 194,r24
  58 001e 80E0      		ldi r24,lo8(uart_output)
  59 0020 90E0      		ldi r25,hi8(uart_output)
  60 0022 9093 0000 		sts __iob+2+1,r25
  61 0026 8093 0000 		sts __iob+2,r24
  62 002a 80E0      		ldi r24,lo8(uart_input)
  63 002c 90E0      		ldi r25,hi8(uart_input)
  64 002e 9093 0000 		sts __iob+1,r25
  65 0032 8093 0000 		sts __iob,r24
  66 0036 5298      		cbi 0xa,2
  67 0038 209A      		sbi 0x4,0
  68 003a C0E0      		ldi r28,lo8(.LC0)
  69 003c D0E0      		ldi r29,hi8(.LC0)
  70               	.L10:
  71 003e 2FEF      		ldi r18,lo8(319999)
  72 0040 81EE      		ldi r24,hi8(319999)
  73 0042 94E0      		ldi r25,hlo8(319999)
  74 0044 2150      	1:	subi r18,1
  75 0046 8040      		sbci r24,0
  76 0048 9040      		sbci r25,0
  77 004a 01F4      		brne 1b
  78 004c 00C0      		rjmp .
  79 004e 0000      		nop
  80 0050 4A9B      		sbis 0x9,2
  81 0052 00C0      		rjmp .L11
  82 0054 DF93      		push r29
  83 0056 CF93      		push r28
  84 0058 0E94 0000 		call printf
  85 005c 289A      		sbi 0x5,0
  86 005e 0F90      		pop __tmp_reg__
  87 0060 0F90      		pop __tmp_reg__
  88 0062 00C0      		rjmp .L10
  89               	.L11:
  90 0064 2898      		cbi 0x5,0
  91 0066 00C0      		rjmp .L10
  93               	.global	uart_input
  94               		.section	.data.uart_input,"aw",@progbits
  97               	uart_input:
  98 0000 0000 00   		.zero	3
  99 0003 01        		.byte	1
 100 0004 0000 0000 		.zero	4
 101 0008 0000      		.word	0
 102 000a 0000      		.word	gs(USART_Receive)
 103 000c 0000      		.word	0
 104               	.global	uart_output
 105               		.section	.data.uart_output,"aw",@progbits
 108               	uart_output:
 109 0000 0000 00   		.zero	3
 110 0003 02        		.byte	2
 111 0004 0000 0000 		.zero	4
 112 0008 0000      		.word	gs(USART_Transmit)
 113 000a 0000      		.word	0
 114 000c 0000      		.word	0
 115               		.ident	"GCC: (AVR_8_bit_GNU_Toolchain_3.7.0_1796) 7.3.0"
 116               	.global __do_copy_data
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccNiHQmH.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccNiHQmH.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccNiHQmH.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccNiHQmH.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccNiHQmH.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccNiHQmH.s:10     .text.USART_Transmit:0000000000000000 USART_Transmit
     /tmp/ccNiHQmH.s:25     .text.USART_Receive:0000000000000000 USART_Receive
     /tmp/ccNiHQmH.s:44     .text.startup.main:0000000000000000 main
     /tmp/ccNiHQmH.s:108    .data.uart_output:0000000000000000 uart_output
     /tmp/ccNiHQmH.s:97     .data.uart_input:0000000000000000 uart_input

UNDEFINED SYMBOLS
__iob
printf
__do_copy_data
